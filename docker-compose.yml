version: "3.9"

services:

  psql:
    image: postgres:14
    container_name: ${PSQL_CONTAINER_NAME}
    tty: true
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: psql
    ports: 
      - "5432:5432"
    volumes:
      - tmpl-psql-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 15s
      retries: 3
    networks:
      - tmpl-network

  redis:
    image: redis:6.2.6
    container_name: ${REDIS_CONTAINER_NAME}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    restart: unless-stopped

  nginx:
    image: nginx:1.21
    container_name: ${NGINX_CONTAINER_NAME}
    tty: true
    ports:
      - "8080:80"
      - "8433:443"
    volumes:
      - ./:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      - tmpl-network

  app:
    build:
      args:
        user: ${APP_USER}
        uid: ${APP_UID}
      context: .
      dockerfile: Dockerfile
    image: ${APP_IMAGE_NAME}
    container_name: ${APP_CONTAINER_NAME}
    tty: true
    working_dir: /var/www
    environment:
      SERVICE_TAGS: dev
      SERVICE_NAME: app
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    restart: unless-stopped
    depends_on:
      - psql
    networks:
      - tmpl-network

networks:
  tmpl-network:
    driver: bridge

volumes:
  tmpl-psql-data:
    driver: local